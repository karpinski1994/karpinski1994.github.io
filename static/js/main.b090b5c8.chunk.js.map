{"version":3,"sources":["img/Cocktails.png","actions/index.js","actions/types.js","components/Tabs/shared.js","components/Tabs/base.js","components/Tabs/TabButton/style.js","components/Button/style.js","components/Button/index.js","containers/Modal/index.js","components/Product/style.js","components/Product/index.js","components/Slider/utils.ts","components/Slider/index.tsx","containers/Products/View/index.js","containers/Products/Form/style.js","components/Input/style.js","components/Input/index.js","containers/Products/Form/validation.js","containers/Products/Form/index.js","components/Nav/style.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","API_URL","addProdSuccess","updatedProducts","type","payload","addProdStarted","addProdFailure","error","removeProdSuccess","removeProdStarted","removeProdFailure","fetchProdSuccess","products","fetchProdStarted","fetchProdFailure","styled","div","isOpen","BaseTabs","state","openIndexes","handleItemClick","index","internalSetState","closing","includes","filter","i","this","undefined","props","changes","allChanges","callback","setState","actualState","getState","changesObject","stateReducer","onStateChange","children","React","Component","defaultProps","button","underline","StyledButton","black","Button","clickHandler","title","onClick","modalRoot","document","getElementById","Modal","element","createElement","appendChild","removeChild","createPortal","StyledModal","ButtonsGroup","column","ProductTile","ImageWrapper","Details","Image","img","Name","StyledCategory","Product","toggleDetailsModal","showDetailsModal","toggleRemovalModal","showRemovalModal","handleOkClick","id","removeProduct","handleCancelClick","name","description","category","src","CocktailImage","calculateStepsQuantity","min","max","step","toFixed","boxShadow","Label","PrecisionBtn","Wrapper","SliderWrapper","Slider","Row","Step","isHandler","stepsQuantity","Score","Message","CustomSlider","label","value","unit","onChange","preciseButons","useState","quantity","message","setQuantity","utils","useEffect","console","log","steps","useMemo","arr","Array","num","length","map","Number","draggable","e","prevState","onStepClick","onDragStart","onDragOver","key","previousQuantity","Panel","Products","getCategories","Object","entries","groupBy","productArray","getCategoriesComponents","categories","contents","getProductsComponents","getAllProductsCategory","p","_id","shortid","generate","removeProd","fetchProd","connect","prds","productsList","dispatch","axios","get","then","data","catch","err","delete","FormWrapper","InputWrapper","StyledInput","input","invalid","touched","Error","Input","changeHandler","errors","config","htmlFor","isFieldValid","field","required","minLength","maxLength","isValid","trim","push","ProductForm","isFormValid","loading","productForm","placeholder","validation","valid","submitHandler","event","preventDefault","formData","fieldId","addProd","target","formFields","form","onSubmit","loaded","to","product","method","url","JSON","stringify","headers","res","LogIn","ListIcon","List","PlusIcon","PlusCircle","nav","Link","onFirstChange","onSecondChange","App","Boolean","window","location","hostname","match","initialState","combineReducers","action","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b090b5c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cocktails.c2c53e09.png\";","import axios from \"axios\";\r\n\r\nimport {\r\n  FETCH_PROD_STARTED,\r\n  FETCH_PROD_SUCCESS,\r\n  FETCH_PROD_FAILURE,\r\n  ADD_PROD_STARTED,\r\n  ADD_PROD_SUCCESS,\r\n  ADD_PROD_FAILURE,\r\n  REMOVE_PROD_STARTED,\r\n  REMOVE_PROD_SUCCESS,\r\n  REMOVE_PROD_FAILURE,\r\n} from \"./types\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/products\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const REMOVE_PRODUCT_SUCCESS = \"REMOVE_PRODUCT_SUCCESS\";\r\n\r\nexport const removeProduct = (productName) => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: productName,\r\n});\r\n\r\nexport const fetchProductsSuccess = (products) => {\r\n  return {\r\n    type: FETCH_PRODUCTS_SUCCESS,\r\n    payload: [...products],\r\n  };\r\n};\r\n\r\nexport const removeProductSuccess = (products) => {\r\n  return {\r\n    type: REMOVE_PRODUCT_SUCCESS,\r\n    payload: [...products],\r\n  };\r\n};\r\n\r\nexport const addProductSuccess = (products) => {\r\n  return {\r\n    type: ADD_PRODUCT_SUCCESS,\r\n    payload: {\r\n      loaded: true,\r\n      error: false,\r\n      products,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchProducts = () => {\r\n  return function (dispatch) {\r\n    // TODO: Handle fetch products failures\r\n    return axios.get(API_URL).then(({ data }) => {\r\n      dispatch(fetchProductsSuccess([...data.products]));\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeProductAction = (id) => {\r\n  return function (dispatch) {\r\n    return axios.delete(`${API_URL}/${id}`).then(({ data }) => {\r\n      dispatch(removeProductSuccess(data.products));\r\n    });\r\n  };\r\n};\r\n\r\nexport const addProductAction = (product) => {\r\n  return function (dispatch) {\r\n    return axios({\r\n      method: \"post\",\r\n      url: API_URL,\r\n      data: JSON.stringify(product),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then(({ data }) => {\r\n        dispatch(addProductSuccess(data.products));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addProdFailure(err.message));\r\n      });\r\n  };\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const addProd = (product) => {\r\n  return (dispatch) => {\r\n    dispatch(addProdStarted());\r\n    axios({\r\n      method: \"post\",\r\n      url: API_URL,\r\n      data: JSON.stringify(product),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(addProdSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addProdFailure(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nconst addProdSuccess = (updatedProducts) => ({\r\n  type: ADD_PROD_SUCCESS,\r\n  payload: [...updatedProducts]\r\n});\r\n\r\nconst addProdStarted = () => ({\r\n  type: ADD_PROD_STARTED,\r\n});\r\n\r\nconst addProdFailure = (error) => {\r\n  return {\r\n    type: ADD_PROD_FAILURE,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\n//\r\nexport const removeProd = (id) => {\r\n\r\n  return (dispatch) => {\r\n    dispatch(removeProdStarted());\r\n    axios\r\n      .delete(`${API_URL}/${id}`)\r\n      .then(({ data }) => {\r\n        dispatch(removeProdSuccess(data.products));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(removeProdFailure(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nconst removeProdSuccess = (updatedProducts) => ({\r\n  type: REMOVE_PROD_SUCCESS,\r\n  payload: [...updatedProducts],\r\n});\r\n\r\nconst removeProdStarted = () => ({\r\n  type: REMOVE_PROD_STARTED,\r\n});\r\n\r\nconst removeProdFailure = (error) => {\r\n  return {\r\n    type: REMOVE_PROD_FAILURE,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n//\r\n\r\n//\r\nexport const fetchProd = () => {\r\n  return function (dispatch) {\r\n    dispatch(fetchProdStarted());\r\n    axios.get(API_URL)\r\n        .then(({ data }) => {\r\n          dispatch(fetchProdSuccess(data.products));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(fetchProdFailure(err.message));\r\n        });\r\n  }\r\n};\r\n\r\nconst fetchProdSuccess = (products) => ({\r\n  type: FETCH_PROD_SUCCESS,\r\n  payload: [...products],\r\n});\r\n\r\nconst fetchProdStarted = () => ({\r\n  type: FETCH_PROD_STARTED,\r\n});\r\n\r\nconst fetchProdFailure = (error) => {\r\n  return {\r\n    type: FETCH_PROD_FAILURE,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n","export const FETCH_PROD_STARTED = 'FETCH_PROD_STARTED';\r\nexport const FETCH_PROD_SUCCESS = 'FETCH_PROD_SUCCESS';\r\nexport const FETCH_PROD_FAILURE = 'FETCH_PROD_FAILURE';\r\n\r\nexport const ADD_PROD_STARTED = 'ADD_PROD_STARTED';\r\nexport const ADD_PROD_SUCCESS = 'ADD_PROD_SUCCESS';\r\nexport const ADD_PROD_FAILURE = 'ADD_PROD_FAILURE';\r\n\r\nexport const REMOVE_PROD_STARTED = 'REMOVE_PROD_STARTED';\r\nexport const REMOVE_PROD_SUCCESS = 'REMOVE_PROD_SUCCESS';\r\nexport const REMOVE_PROD_FAILURE = 'REMOVE_PROD_FAILURE';\r\n","import styled from 'styled-components'\r\n\r\nconst TabButtons = styled.div`display: 'flex'`;\r\n\r\nconst TabItems = styled.div`\r\n  /* position: 'relative'; */\r\n  /* min-height: 160; */\r\n  display: flex;\r\n  flex-wrap: 'wrap';\r\n  max-width: 100%;\r\n`;\r\n\r\nconst TabItem = styled.div`\r\n  display: ${({isOpen}) => {\r\n    return isOpen ? 'flex' : 'none'\r\n    }};\r\n  \r\n`;\r\n\r\nfunction preventClose(state, changes) {\r\n  if (changes.type === 'closing' && state.openIndexes.length < 2) {\r\n    return {...changes, openIndexes: state.openIndexes}\r\n  }\r\n  return changes\r\n}\r\n\r\nfunction single(state, changes) {\r\n  if (changes.type === 'opening') {\r\n    return {openIndexes: changes.openIndexes.slice(-1)}\r\n  }\r\n  return changes\r\n}\r\n\r\nfunction combineReducers(...reducers) {\r\n  return (state, changes) => {\r\n    for (let reducer of reducers) {\r\n      const result = reducer(state, changes)\r\n      if (result !== changes) {\r\n        return result\r\n      }\r\n    }\r\n    return changes\r\n  }\r\n}\r\n\r\nexport {\r\n  TabItem,\r\n  TabItems,\r\n  TabButtons,\r\n  combineReducers,\r\n  preventClose,\r\n  single,\r\n}\r\n","import React from 'react'\r\n\r\nclass BaseTabs extends React.Component {\r\n  static defaultProps = {\r\n    stateReducer: (state, changes) => changes,\r\n    onStateChange: () => {},\r\n  }\r\n  state = {openIndexes: [0]}\r\n  getState(state = this.state) {\r\n    return {\r\n      openIndexes:\r\n        this.props.openIndexes === undefined\r\n          ? state.openIndexes\r\n          : this.props.openIndexes,\r\n    }\r\n  }\r\n  internalSetState(changes, callback = () => {}) {\r\n    let allChanges\r\n    this.setState(\r\n      state => {\r\n        const actualState = this.getState(state)\r\n        const changesObject =\r\n          typeof changes === 'function' ? changes(actualState) : changes\r\n        allChanges = this.props.stateReducer(actualState, changesObject)\r\n        return allChanges\r\n      },\r\n      () => {\r\n        this.props.onStateChange(allChanges)\r\n        callback()\r\n      },\r\n    )\r\n  }\r\n  handleItemClick = index => {\r\n    this.internalSetState(state => {\r\n      const closing = state.openIndexes.includes(index)\r\n      return {\r\n        type: closing ? 'closing' : 'opening',\r\n        openIndexes: closing\r\n          ? state.openIndexes.filter(i => i !== index)\r\n          : [...state.openIndexes, index],\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return this.props.children({\r\n      openIndexes: this.getState().openIndexes,\r\n      handleItemClick: this.handleItemClick,\r\n    })\r\n  }\r\n}\r\n\r\nexport {BaseTabs}","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: black;\r\n  border: none;\r\n  outline: none;\r\n  background-color: white;\r\n  border-bottom: ${props => props.underline? '3px solid gold' : 'none'};\r\n  &:first-child {\r\n    margin-left: 0px;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  background-color: ${props => props.black ? 'black' : 'none'};\r\n  color: ${props => props.black ? 'white' : 'black'};\r\n  border: 1px solid #333;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  padding: 5px 10px;\r\n  text-decoration: none; \r\n`;","import React from \"react\";\r\nimport { StyledButton } from \"./style\";\r\n\r\nconst Button = ({ clickHandler, black, title }) => (\r\n  <StyledButton onClick={clickHandler} black={black}>\r\n    {title}\r\n  </StyledButton>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nconst modalRoot = document.getElementById(\"modal\");\r\n// TODO: Display modal considering current scrolling position\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.element = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.element);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.element);\r\n  }\r\n  render() {\r\n    return createPortal(this.props.children, this.element);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledModal = styled.div`\r\n  background: white;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  padding: 10px 10px;\r\n  width: 500px;\r\n  height: auto;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 0px 0px 15px 15px rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const ButtonsGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.column ? \"column\" : \"row\")};\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ProductTile = styled.div`\r\n  margin: 10px;\r\n  display: flex;\r\n  border-radius: 3px;\r\n  border: 1px solid #555;\r\n  width: 260px;\r\n  height: 155px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: auto;\r\n  max-height: 70%;\r\n  margin-top: 20px;\r\n  margin: 15px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const StyledCategory = styled.div`\r\n  font-size: 13px;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport CocktailImage from \"../../img/Cocktails.png\";\r\nimport Button from \"components/Button\";\r\nimport Modal from \"containers/Modal\";\r\nimport {\r\n  StyledModal,\r\n  ButtonsGroup,\r\n  ProductTile,\r\n  ImageWrapper,\r\n  Details,\r\n  Image,\r\n  Name,\r\n  StyledCategory,\r\n} from \"./style\";\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showRemovalModal: false,\r\n      showDetailsModal: false,\r\n    };\r\n  }\r\n\r\n  toggleDetailsModal = () => {\r\n    this.setState({\r\n      showDetailsModal: !this.state.showDetailsModal,\r\n    });\r\n  };\r\n\r\n  toggleRemovalModal = () => {\r\n    this.setState({\r\n      showRemovalModal: !this.state.showRemovalModal,\r\n    });\r\n  };\r\n\r\n  handleOkClick = (id) => {\r\n    this.props.removeProduct(id);\r\n    this.toggleRemovalModal();\r\n  };\r\n\r\n  handleCancelClick = () => {\r\n    this.toggleRemovalModal();\r\n  };\r\n\r\n  render() {\r\n    const { id, name, description, category } = this.props;\r\n    const { showRemovalModal, showDetailsModal } = this.state;\r\n\r\n    return (\r\n      <ProductTile>\r\n        <ImageWrapper>\r\n          <Image src={CocktailImage} />\r\n        </ImageWrapper>\r\n        <Details>\r\n          <Name>{name}</Name>\r\n          <StyledCategory>{category}</StyledCategory>\r\n          <ButtonsGroup column>\r\n            <Button title=\"Details\" clickHandler={this.toggleDetailsModal} />\r\n            <Button\r\n              title=\"Remove\"\r\n              clickHandler={this.toggleRemovalModal}\r\n              black\r\n            />\r\n          </ButtonsGroup>\r\n        </Details>\r\n\r\n        {showDetailsModal ? (\r\n          <Modal>\r\n            <StyledModal>\r\n              <h1>{name}</h1>\r\n              <p>{description}</p>\r\n              <ButtonsGroup>\r\n                <Button\r\n                  title=\"Close\"\r\n                  clickHandler={this.toggleDetailsModal}\r\n                  black\r\n                />\r\n              </ButtonsGroup>\r\n            </StyledModal>\r\n          </Modal>\r\n        ) : null}\r\n        {showRemovalModal ? (\r\n          <Modal>\r\n            <StyledModal>\r\n              <h1>Remove product</h1>\r\n              <p>Are you sure you want to remove this product?</p>\r\n              <ButtonsGroup>\r\n                <Button title=\"Cancel\" clickHandler={this.handleCancelClick} />\r\n                <Button\r\n                  title=\"Yes\"\r\n                  clickHandler={() => this.handleOkClick(id)}\r\n                  black\r\n                />\r\n              </ButtonsGroup>\r\n            </StyledModal>\r\n          </Modal>\r\n        ) : null}\r\n      </ProductTile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","\r\nexport const calculateStepsQuantity = (min: number, max: number, step: number) => {\r\n  \r\n  return (+max.toFixed(2) - +min.toFixed(2)) / +step.toFixed(2) + 1\r\n};\r\n\r\nexport const createArrFromNumber = (min: number, max: number, step: number) => {\r\n  const stepsQuantity = calculateStepsQuantity(min, max, step);\r\n  const arr = new Array(stepsQuantity);\r\n  let num = min;\r\n  for(let i = 0; i < arr.length; i++ ) {\r\n    arr[i] = +num.toFixed(2)\r\n    num += +step.toFixed(2)\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport function decrease(state: { previousQuantity: number, min: number, step: number }) {\r\n  return {\r\n    message: state.previousQuantity > state.min ? '' : `You reached minimum value (${state.min}).`,\r\n    quantity: state.previousQuantity > state.min ? +state.previousQuantity.toFixed(2) - +state.step.toFixed(2) : +state.min.toFixed(2),\r\n  };\r\n}\r\n\r\nexport function increase(state: { previousQuantity: number, max: number, step: number}) {\r\n  return {\r\n    message: state.previousQuantity < state.max ? '' :  `You reached maximum value (${state.max}).`,\r\n    quantity: state.previousQuantity < state.max ? +state.previousQuantity.toFixed(2) + +state.step.toFixed(2) : +state.max.toFixed(2),\r\n  };\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as utils from \"./utils\";\r\n\r\n// THEMING\r\nconst sliderBtnWidth = 72;\r\nconst sliderBtnHeight = 27;\r\nconst sliderRadius = 27;\r\nconst bgColor = \"#aaa\";\r\nconst boxShadow = \"0px 2px 8px -4px rgba(0,0,0,0.75)\";\r\n\r\ninterface StyledProps {\r\n  isHandler?: boolean;\r\n  stepsQuantity?: number;\r\n}\r\n\r\ninterface Props {\r\n  label: string;\r\n  max: number;\r\n  min: number;\r\n  step: number;\r\n  value: number;\r\n  unit?: string;\r\n  onChange(): any;\r\n  preciseButons?: boolean;\r\n}\r\n\r\nconst Label = styled.div`\r\n  text-align: left;\r\n  font-weight: bold;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst PrecisionBtn = styled.button`\r\n  box-shadow: ${boxShadow};\r\n  background-color: white;\r\n  border: 1px solid ${bgColor};\r\n  border-radius: 50%;\r\n  color: black;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  margin: 0 5px;\r\n  height: ${sliderBtnHeight}px;\r\n  width: calc(${sliderBtnHeight}px + 3px);\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 100%;\r\n  text-align: center;\r\n  /* TODO: it shouldnt be done like this */\r\n  height: 92px;\r\n`;\r\n// TODO: adjust shadows of background and button (left-right)\r\nconst SliderWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  height: ${sliderBtnHeight}px;\r\n  background: rgb(230, 230, 230);\r\n  background: linear-gradient(\r\n    0deg,\r\n    rgba(230, 230, 230, 1) 0%,\r\n    rgba(201, 201, 201, 1) 83%,\r\n    rgba(171, 171, 171, 1) 100%\r\n  );\r\n  border: 1px solid ${bgColor};\r\n  border-radius: ${sliderRadius}px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\n// TODO: Change slider's logic to move csses only nad numbers without re-rendering everything\r\n// TODO: Remove selecting text when clicked\r\nconst Step = styled.div<StyledProps>`\r\n  /* TODO: set propper css property for selecting button as a whole */\r\n  user-select: all;\r\n  box-shadow: ${({ isHandler }) =>\r\n    isHandler ? boxShadow : null};\r\n  background-color: ${({ isHandler }) => (isHandler ? \"white\" : null)};\r\n  margin: ${({ isHandler }) => (isHandler ? `1.5px` : null)};\r\n  border-radius: ${sliderRadius}px;\r\n  // TODO: Center position of clicked step\r\n  width: ${({ stepsQuantity, isHandler }) =>\r\n    isHandler ? `${sliderBtnWidth}px` : `calc(100% / ${stepsQuantity})`};\r\n  font-weight: bold;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Score = styled.div``;\r\n\r\nconst Message = styled.div`\r\n  margin-top: 15px;\r\n  color: red;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CustomSlider = ({\r\n  label,\r\n  max,\r\n  min,\r\n  step,\r\n  value,\r\n  unit,\r\n  onChange,\r\n  preciseButons,\r\n}: Props) => {\r\n  const [state, setQuantity] = useState({ quantity: 0, message: \"\" });\r\n  const stepsQuantity = utils.calculateStepsQuantity(min, max, step);\r\n\r\n  useEffect(() => {\r\n    setQuantity({ quantity: value, message: \"\" });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onChange();\r\n    console.log(\"state.quantity: \", state.quantity);\r\n  }, [state.quantity]);\r\n\r\n  const onDragStart = (e: React.DragEvent, id: number) => {};\r\n\r\n  const onDragOver = (e: React.DragEvent, id: number) => {\r\n    setQuantity((prevState) => ({\r\n      ...prevState,\r\n      message: \"\",\r\n      quantity: id,\r\n    }));\r\n  };\r\n  // TODO: Center position of clicked step\r\n  const onStepClick = (e: React.MouseEvent<HTMLDivElement>, id: number) => {\r\n    setQuantity((prevState) => ({\r\n      ...prevState,\r\n      message: \"\",\r\n      quantity: id,\r\n    }));\r\n  };\r\n\r\n  const onClickPlus = () => {\r\n    setQuantity((prevState) =>\r\n      utils.increase({ previousQuantity: prevState.quantity, max, step })\r\n    );\r\n  };\r\n\r\n  const onClickMinus = () => {\r\n    setQuantity((prevState) =>\r\n      utils.decrease({ previousQuantity: prevState.quantity, min, step })\r\n    );\r\n  };\r\n\r\n  const steps = useMemo(\r\n    () =>\r\n      utils.createArrFromNumber(min, max, step).map((id) => {\r\n        const isHandler = Number(id) === Number(state.quantity);\r\n        return (\r\n          <Step\r\n            draggable\r\n            stepsQuantity={stepsQuantity}\r\n            isHandler={isHandler}\r\n            onClick={(e) => onStepClick(e, id)}\r\n            onDragStart={(e) => onDragStart(e, id)}\r\n            onDragOver={(e) => onDragOver(e, id)}\r\n            key={id}\r\n          >\r\n            {isHandler ? state.quantity + ` ${unit ? ` ${unit}` : null}` : null}\r\n          </Step>\r\n        );\r\n      }),\r\n    [state.quantity]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>{label && label}</Label>\r\n      <Row>\r\n        {preciseButons && <PrecisionBtn onClick={onClickMinus}>-</PrecisionBtn>}\r\n        <SliderWrapper>{max && <Slider>{steps}</Slider>}</SliderWrapper>\r\n        {preciseButons && <PrecisionBtn onClick={onClickPlus}>+</PrecisionBtn>}\r\n      </Row>\r\n      <Score>\r\n        <Message>{state?.message}</Message>\r\n      </Score>\r\n    </Wrapper>\r\n  );\r\n};\r\n// TODO: Prevent rerendering each step, maybe some memoization or sliding window technique\r\n// TODO: Rerender only steps that change by using sliding window technique\r\n// TODO: Change slider's logic to move csses only nad numbers without re-rendering everything\r\n// TODO: Maybe value should be changed on drop only\r\nexport default CustomSlider;\r\n","import React, { Component } from \"react\";\r\nimport { mapValues, groupBy } from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProd, removeProd } from \"actions\";\r\nimport shortid from \"shortid\";\r\n// import Tabs from \"containers/Products/Tabs\";\r\nimport { StandardTabs } from \"components/Tabs/standard\";\r\nimport Product from \"components/Product\";\r\nimport styled from 'styled-components'\r\n\r\nimport Slider from 'components/Slider/index'\r\n\r\nexport const Panel = styled.div`\r\n  box-shadow: 0px 6px 22px -1px rgba(0,0,0,0.75);\r\n  height: 210px;\r\n  width: 510px;\r\n  padding: 25px;\r\n`\r\n// TODO: Here should be the whole logic connected to products and passed to generic tabs\r\nexport class Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProd();\r\n  }\r\n\r\n  getCategories = (products) => {\r\n    return Object.entries(groupBy(products, \"category\")).map(\r\n      (productArray) => ({\r\n        title: productArray[0],\r\n        products: productArray[1],\r\n      })\r\n    );\r\n  };\r\n\r\n  getCategoriesComponents = (categories) =>\r\n    categories.map(({ title, products }) => ({\r\n      title,\r\n      contents: this.getProductsComponents(products),\r\n    }));\r\n\r\n  getAllProductsCategory = (products) => ({\r\n    title: \"All products\",\r\n    contents: this.getProductsComponents(products),\r\n  });\r\n\r\n  getProductsComponents = (products) =>\r\n    products.map((p) => (\r\n      <Product\r\n        id={p._id}\r\n        key={shortid.generate()}\r\n        removeProduct={this.props.removeProd}\r\n        {...p}\r\n      />\r\n    ));\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const categories = this.getCategories(products);\r\n    const items = [\r\n      this.getAllProductsCategory(products),\r\n      ...this.getCategoriesComponents(categories),\r\n    ];\r\n    const onFirstChange = () => {\r\n      console.log('first change')\r\n    }\r\n    const onSecondChange = () => {\r\n      console.log('second change')\r\n    }\r\n    return (\r\n      <Panel>\r\n        {/* <Tabs products={products} removeProduct={removeProd} /> */}\r\n        {/* <StandardTabs items={items} /> */}\r\n        <Slider onChange={onFirstChange} label='Percentages' min={0} max={100} step={1} value={30} unit='%' preciseButons/>\r\n        <Slider onChange={onSecondChange} label='Units' min={0} max={1} step={0.1} value={0.5} unit='p' />\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: state.prds.productsList };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchProd,\r\n  removeProd,\r\n})(Products);\r\n","import styled from 'styled-components';\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin: 2% 5%;\r\n`;\r\n\r\nexport const Errors = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  color: red;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  text-align: left;\r\n  flex-direction: column;\r\n  margin-bottom: 2%;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  font-weight: bold;\r\n  padding: 10px 0;\r\n  :first-letter {\r\n    text-transform:capitalize;\r\n  } \r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  flex-basis: 60%;\r\n  border: 0;\r\n  font-size: inherit;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  border: ${({invalid, touched}) => invalid || !touched ? '1px solid red' : '1px solid lightGrey'}\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  color: red;\r\n`;","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { InputWrapper, StyledInput, Label, Error } from \"./style\";\r\n\r\nconst Input = ({\r\n  id,\r\n  label,\r\n  type = \"text\",\r\n  value,\r\n  changeHandler,\r\n  invalid,\r\n  touched,\r\n  errors,\r\n  config,\r\n}) => {\r\n  return (\r\n    <InputWrapper>\r\n      <Label htmlFor={id}>{label}</Label>\r\n      <StyledInput\r\n        type={type}\r\n        value={value}\r\n        onChange={changeHandler}\r\n        invalid={invalid}\r\n        touched={touched}\r\n        {...config}\r\n      />\r\n      <div>\r\n        {/* TODO: Add some transition using ReactCSSTransitionGroup */}\r\n        {errors &&\r\n          errors.map((err) => <Error key={shortid.generate()}>{err}</Error>)}\r\n      </div>\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\r\nexport const isFieldValid = (field, { required, minLength, maxLength }) => {\r\n  let isValid = true;\r\n  let errors = [];\r\n  if (required) {\r\n    isValid = field.value.trim() !== \"\" && isValid;    \r\n    if(!field.touched || field.value.trim() === \"\") {\r\n      errors.push('Field is required')\r\n    }\r\n  }\r\n\r\n  if (minLength) {\r\n    isValid = field.value.length >= minLength && isValid;\r\n    if(field.value.length < minLength) {\r\n      errors.push(`Field's length must be bigger than ${minLength}`)\r\n    }\r\n  }\r\n\r\n  if (maxLength) {\r\n    isValid = field.value.length <= maxLength && isValid;\r\n     if(field.value.length > minLength) {\r\n      errors.push(`Field's length must be lower than ${maxLength}`)\r\n    }\r\n  }\r\n  // TODO: it could be done in better way for ex basing on errors without isvalid prop\r\n  return {\r\n    isValid,\r\n    errors\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addProd } from \"actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { FormWrapper } from \"./style\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\nimport { isFieldValid } from \"./validation\";\r\n\r\n// TODO: Prevent adding the same product twice\r\n// TODO: Improve validation info\r\n// TODO: Handle Server's validation\r\nclass ProductForm extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    loading: false,\r\n    productForm: {\r\n      name: {\r\n        config: {\r\n          type: \"text\",\r\n          placeholder: \"Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        errors: [],\r\n      },\r\n      category: {\r\n        config: {\r\n          type: \"text\",\r\n          placeholder: \"Category\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        errors: [],\r\n      },\r\n      description: {\r\n        config: {\r\n          type: \"text\",\r\n          placeholder: \"Description\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        errors: [],\r\n      },\r\n    },\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const { isFormValid } = this.state;\r\n    if (isFormValid) {\r\n      this.setState({ loading: true });\r\n      const formData = {};\r\n      for (let fieldId in this.state.productForm) {\r\n        formData[fieldId] = this.state.productForm[fieldId].value.trim();\r\n      }\r\n      this.props.addProd(formData);\r\n      // TODO: Handle clearing form on successful save in better way\r\n    }\r\n  };\r\n\r\n  changeHandler = (event, id) => {\r\n    const productForm = {\r\n      ...this.state.productForm,\r\n    };\r\n    const field = {\r\n      ...productForm[id],\r\n    };\r\n    field.value = event.target.value;\r\n    const { isValid, errors } = isFieldValid(field, field.validation);\r\n    field.errors = errors;\r\n    field.valid = isValid;\r\n    field.touched = true;\r\n    productForm[id] = field;\r\n\r\n    let isFormValid = true;\r\n    for (let id in productForm) {\r\n      isFormValid = productForm[id].valid && isFormValid;\r\n    }\r\n    this.setState({ productForm, isFormValid });\r\n  };\r\n\r\n  render() {\r\n    const formFields = [];\r\n    for (let key in this.state.productForm) {\r\n      formFields.push({\r\n        id: key,\r\n        config: this.state.productForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.submitHandler}>\r\n        {formFields.map((field) => {\r\n          return (\r\n            <Input\r\n              key={field.id}\r\n              label={field.id}\r\n              config={field.config.config}\r\n              value={field.config.value}\r\n              invalid={!field.config.valid}\r\n              touched={field.config.touched}\r\n              errors={field.config.errors}\r\n              changeHandler={(e) => this.changeHandler(e, field.id)}\r\n            />\r\n          );\r\n        })}\r\n        <Button title=\"Add product\" />\r\n      </form>\r\n    );\r\n    // TODO: Add some loading animation\r\n    if (this.props.loaded) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <FormWrapper>\r\n        <h1>Add Product</h1>\r\n        {form}\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { loading: state.prds.loading };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addProd\r\n})(ProductForm);\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, PlusCircle, LogIn } from \"react-feather\";\r\n\r\nexport const LogInIcon = styled(LogIn)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: 0;\r\n\r\n  &:hover {\r\n    transition: all 0.5s;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ListIcon = styled(List)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const PlusIcon = styled(PlusCircle)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  width: 100px;\r\n  background-color: #222;\r\n  color: white;\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  position: relative;\r\n  display: block;\r\n  padding: 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n  &:hover ${ListIcon} {\r\n    transition: all 0.5s;\r\n    opacity: 0;\r\n  }\r\n  &:hover ${PlusIcon} {\r\n    transition: all 0.5s;\r\n    opacity: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport ProductsView from \"containers/Products/View\";\r\nimport ProductsForm from \"containers/Products/Form\";\r\nimport Nav from \"components/Nav\";\r\nimport styled from \"styled-components\";\r\nimport { Panel } from \"containers/Products/View\";\r\nimport Slider from \"components/Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  margin: 40px 40px;\r\n`;\r\nconst onFirstChange = () => {\r\n  console.log(\"first change\");\r\n};\r\nconst onSecondChange = () => {\r\n  console.log(\"second change\");\r\n};\r\n// TODO: Add better RWD\r\nfunction App() {\r\n  return (\r\n    // <BrowserRouter>\r\n    //   <Wrapper>\r\n    //     <Nav />\r\n    //     <Content>\r\n    //       <Route path=\"/\" exact component={ProductsView} />\r\n    //       {/* <Route path=\"/add\" exact component={ProductsForm} /> */}\r\n    //       {/* <Route path=\"/tabs\" exact component={Standard}/> */}\r\n    //     </Content>\r\n    //   </Wrapper>\r\n    // </BrowserRouter>\r\n    <Wrapper>\r\n      <Panel>\r\n        <Slider\r\n          onChange={onFirstChange}\r\n          label=\"Percentages\"\r\n          min={0}\r\n          max={100}\r\n          step={1}\r\n          value={30}\r\n          unit=\"%\"\r\n          preciseButons\r\n        />\r\n        <Slider\r\n          onChange={onSecondChange}\r\n          label=\"Units\"\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          value={0.5}\r\n          unit=\"p\"\r\n        />\r\n      </Panel>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {FETCH_PRODUCTS_SUCCESS, REMOVE_PRODUCT_SUCCESS, ADD_PRODUCT_SUCCESS} from 'actions';\r\nimport {\r\n  FETCH_PROD_STARTED,\r\n  FETCH_PROD_SUCCESS,\r\n  FETCH_PROD_FAILURE,\r\n  ADD_PROD_STARTED,\r\n  ADD_PROD_SUCCESS,\r\n  ADD_PROD_FAILURE,\r\n  REMOVE_PROD_STARTED,\r\n  REMOVE_PROD_SUCCESS,\r\n  REMOVE_PROD_FAILURE,\r\n} from 'actions/types';\r\n\r\n// TODO: Reducers should handle async operations, change for ON_SUCCESSFUL_ADD, ON_SUCCESSFSUL_REMOVE etc. \r\n// TODO: Handle errors generically (throw error), then catch by React boundary and TOAST\r\n// TODO: Handle cashing data using async storage/\r\nconst productsReducer = (products = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return [...action.payload];\r\n\r\n    case REMOVE_PRODUCT_SUCCESS:\r\n      return [...action.payload];\r\n\r\n    case ADD_PRODUCT_SUCCESS:\r\n      return {\r\n        loaded: true,\r\n        products: [...action.payload.products]\r\n      };\r\n\r\n    default:\r\n      return [...products];\r\n  }\r\n};\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  productsList: [],\r\n  error: null\r\n};\r\n\r\nfunction prodsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PROD_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FETCH_PROD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        productsList: [...action.payload]\r\n      };\r\n    case FETCH_PROD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    case ADD_PROD_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADD_PROD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        productsList: [...action.payload]\r\n      };\r\n    case ADD_PROD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    case REMOVE_PROD_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case REMOVE_PROD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        productsList: [...action.payload]\r\n      };\r\n    case REMOVE_PROD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// TODO: Clean reducer\r\nexport default combineReducers({\r\n  products: productsReducer,\r\n  prds: prodsReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers, applyMiddleware(thunk))}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}